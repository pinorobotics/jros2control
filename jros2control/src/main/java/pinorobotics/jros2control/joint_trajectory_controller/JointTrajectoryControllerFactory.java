/*
 * Copyright 2025 jroscontrol project
 * 
 * Website: https://github.com/pinorobotics/jros2control
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package pinorobotics.jros2control.joint_trajectory_controller;

import id.jros2client.JRos2Client;
import id.jroscommon.RosName;
import java.util.List;
import pinorobotics.jros2control.joint_trajectory_controller.impl.JointTrajectoryControllerImpl;

/**
 * Factory class for joint_trajectory_controller
 *
 * @author lambdaprime intid@protonmail.com
 */
public class JointTrajectoryControllerFactory {

    /**
     * <b>jros2control</b> implementation of ROS2 Joint Trajectory Controller
     *
     * @param jointStateListeners list of user defined joint listeners which will be notified for
     *     any received joint trajectories
     * @param joints list of joints which states will be published. It can be taken from
     *     ros2_controllers.yaml which is usually generated by MoveIt Setup Assistant
     * @param initialPositions joint initial positions. It can be taken from initial_positions.yaml
     *     which is usually generated by MoveIt Setup Assistant
     * @param controllerName controller name matches the topic name from which this controller will
     *     receive trajectories
     * @see <a
     *     href="https://control.ros.org/master/doc/ros2_controllers/joint_trajectory_controller/doc/userdoc.html">joint_trajectory_controller</a>
     */
    public JointTrajectoryController create(
            JRos2Client client,
            List<ActuatorHardware> actuatorHardwareList,
            List<String> joints,
            List<Double> initialPositions,
            RosName controllerName) {
        return new JointTrajectoryControllerImpl(
                client, actuatorHardwareList, joints, initialPositions, controllerName);
    }
}
